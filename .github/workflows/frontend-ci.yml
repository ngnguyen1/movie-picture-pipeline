name: Frontend Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - closed
    branches:
      - main
    paths:
      - "starter/frontend/**"
  push:
    branches:
      - development
env:
  NODE_VERSION: 18.x

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: $NODE_VERSION

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install deps
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run lint
        run: npm run lint -- --fix

  test:
    name: Testing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: $NODE_VERSION

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install deps
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - run: npm test

  build:
    name: Build frontend
    runs-on: ubuntu-latest
    needs: [lint, test]
    defaults:
      run:
        working-directory: ./starter/frontend

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - run: npm ci

    - run: echo "configure aws"

    - run: echo "login ecr"

    - run: echo "push image to ecr"

